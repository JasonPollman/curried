{"version":3,"sources":["index.js"],"names":["_","curry","VERSION"],"mappings":"0/nBA0IQA,CAAAA,C,CAAMC,c,CAAND,C,aACR,GAAME,CAAAA,OAAO,CAAG,OAAhB,C","sourceRoot":"packages/auto/all","sourcesContent":["/**\n * The @foldr library.\n * This is an automatically generated file that aggregates all of the individual\n * packages in the @foldr mono-repo and exports them as a single requirable module.\n * Only \"non-internal\" packages and some other useful things (such as the curry/partial\n * placeholder symbol) are exposed via this module.\n * @since 12/9/2018\n * @file\n */\n\nimport always from '@foldr/always';\nimport attempt from '@foldr/attempt';\nimport attemptFx from '@foldr/attempt-fx';\nimport binary from '@foldr/binary';\nimport chunk from '@foldr/chunk';\nimport chunkFx from '@foldr/chunk-fx';\nimport clamp from '@foldr/clamp';\nimport clampFx from '@foldr/clamp-fx';\nimport compact from '@foldr/compact';\nimport compose from '@foldr/compose';\nimport composeAsync from '@foldr/compose-async';\nimport composeFx from '@foldr/compose-fx';\nimport curry from '@foldr/curry';\nimport delay from '@foldr/delay';\nimport escapeRegExp from '@foldr/escape-regexp';\nimport every from '@foldr/every';\nimport everyFx from '@foldr/every-fx';\nimport False from '@foldr/false';\nimport filter from '@foldr/filter';\nimport filterFx from '@foldr/filter-fx';\nimport find from '@foldr/find';\nimport findKey from '@foldr/find-key';\nimport findLast from '@foldr/find-last';\nimport flatten from '@foldr/flatten';\nimport flattenDeep from '@foldr/flatten-deep';\nimport flattenDeepFx from '@foldr/flatten-deep-fx';\nimport forEach from '@foldr/for-each';\nimport forEachRight from '@foldr/for-each-right';\nimport get from '@foldr/get';\nimport getFx from '@foldr/get-fx';\nimport has from '@foldr/has';\nimport hasFx from '@foldr/has-fx';\nimport head from '@foldr/head';\nimport identity from '@foldr/identity';\nimport init from '@foldr/init';\nimport interpolate from '@foldr/interpolate';\nimport invoke from '@foldr/invoke';\nimport invokeFx from '@foldr/invoke-fx';\nimport is from '@foldr/is';\nimport isArguments from '@foldr/is-arguments';\nimport isArray from '@foldr/is-array';\nimport isArrayLike from '@foldr/is-array-like';\nimport isBoolean from '@foldr/is-boolean';\nimport isBuffer from '@foldr/is-buffer';\nimport isDate from '@foldr/is-date';\nimport isEqual from '@foldr/is-equal';\nimport isError from '@foldr/is-error';\nimport isFinite from '@foldr/is-finite';\nimport isFunction from '@foldr/is-function';\nimport isInteger from '@foldr/is-integer';\nimport isMap from '@foldr/is-map';\nimport isNaN from '@foldr/is-nan';\nimport isNil from '@foldr/is-nil';\nimport isNull from '@foldr/is-null';\nimport isNumber from '@foldr/is-number';\nimport isObject from '@foldr/is-object';\nimport isObjectLike from '@foldr/is-object-like';\nimport isPlainObject from '@foldr/is-plain-object';\nimport isPromise from '@foldr/is-promise';\nimport isRegExp from '@foldr/is-regexp';\nimport isSafeInteger from '@foldr/is-safe-integer';\nimport isSet from '@foldr/is-set';\nimport isString from '@foldr/is-string';\nimport isSymbol from '@foldr/is-symbol';\nimport isUndefined from '@foldr/is-undefined';\nimport isWeakMap from '@foldr/is-weak-map';\nimport keys from '@foldr/keys';\nimport last from '@foldr/last';\nimport map from '@foldr/map';\nimport mapFx from '@foldr/map-fx';\nimport mapKeys from '@foldr/map-keys';\nimport mapKeysFx from '@foldr/map-keys-fx';\nimport mapRight from '@foldr/map-right';\nimport mapRightFx from '@foldr/map-right-fx';\nimport mapValues from '@foldr/map-values';\nimport mapValuesFx from '@foldr/map-values-fx';\nimport memoize from '@foldr/memoize';\nimport nary from '@foldr/nary';\nimport naryFx from '@foldr/nary-fx';\nimport negate from '@foldr/negate';\nimport noop from '@foldr/noop';\nimport nth from '@foldr/nth';\nimport nthFx from '@foldr/nth-fx';\nimport nullary from '@foldr/nullary';\nimport omit from '@foldr/omit';\nimport omitFx from '@foldr/omit-fx';\nimport once from '@foldr/once';\nimport partial from '@foldr/partial';\nimport pick from '@foldr/pick';\nimport pickFx from '@foldr/pick-fx';\nimport pipe from '@foldr/pipe';\nimport random from '@foldr/random';\nimport rearg from '@foldr/rearg';\nimport reduce from '@foldr/reduce';\nimport reduceFx from '@foldr/reduce-fx';\nimport reduceRight from '@foldr/reduce-right';\nimport reduceRightFx from '@foldr/reduce-right-fx';\nimport reverse from '@foldr/reverse';\nimport sample from '@foldr/sample';\nimport shuffle from '@foldr/shuffle';\nimport size from '@foldr/size';\nimport some from '@foldr/some';\nimport someFx from '@foldr/some-fx';\nimport stubArray from '@foldr/stub-array';\nimport stubObject from '@foldr/stub-object';\nimport stubString from '@foldr/stub-string';\nimport tail from '@foldr/tail';\nimport toCamelCase from '@foldr/to-camel-case';\nimport toFinite from '@foldr/to-finite';\nimport toIngeter from '@foldr/to-ingeter';\nimport toKebabCase from '@foldr/to-kebab-case';\nimport toLowerCase from '@foldr/to-lower-case';\nimport toNumber from '@foldr/to-number';\nimport toPath from '@foldr/to-path';\nimport toSnakeCase from '@foldr/to-snake-case';\nimport toString from '@foldr/to-string';\nimport toStringTag from '@foldr/to-string-tag';\nimport toTitleCase from '@foldr/to-title-case';\nimport toUpperCase from '@foldr/to-upper-case';\nimport toUpperFirst from '@foldr/to-upper-first';\nimport toWords from '@foldr/to-words';\nimport trinary from '@foldr/trinary';\nimport True from '@foldr/true';\nimport unary from '@foldr/unary';\nimport values from '@foldr/values';\nimport zip from '@foldr/zip';\nimport zipFx from '@foldr/zip-fx';\n\nconst { _ } = curry;\nconst VERSION = '0.0.0';\n\nexport {\n  _,\n  VERSION,\n  always,\n  attempt,\n  attemptFx,\n  binary,\n  chunk,\n  chunkFx,\n  clamp,\n  clampFx,\n  compact,\n  compose,\n  composeAsync,\n  composeFx,\n  curry,\n  delay,\n  escapeRegExp,\n  every,\n  everyFx,\n  False,\n  filter,\n  filterFx,\n  find,\n  findKey,\n  findLast,\n  flatten,\n  flattenDeep,\n  flattenDeepFx,\n  forEach,\n  forEachRight,\n  get,\n  getFx,\n  has,\n  hasFx,\n  head,\n  identity,\n  init,\n  interpolate,\n  invoke,\n  invokeFx,\n  is,\n  isArguments,\n  isArray,\n  isArrayLike,\n  isBoolean,\n  isBuffer,\n  isDate,\n  isEqual,\n  isError,\n  isFinite,\n  isFunction,\n  isInteger,\n  isMap,\n  isNaN,\n  isNil,\n  isNull,\n  isNumber,\n  isObject,\n  isObjectLike,\n  isPlainObject,\n  isPromise,\n  isRegExp,\n  isSafeInteger,\n  isSet,\n  isString,\n  isSymbol,\n  isUndefined,\n  isWeakMap,\n  keys,\n  last,\n  map,\n  mapFx,\n  mapKeys,\n  mapKeysFx,\n  mapRight,\n  mapRightFx,\n  mapValues,\n  mapValuesFx,\n  memoize,\n  nary,\n  naryFx,\n  negate,\n  noop,\n  nth,\n  nthFx,\n  nullary,\n  omit,\n  omitFx,\n  once,\n  partial,\n  pick,\n  pickFx,\n  pipe,\n  random,\n  rearg,\n  reduce,\n  reduceFx,\n  reduceRight,\n  reduceRightFx,\n  reverse,\n  sample,\n  shuffle,\n  size,\n  some,\n  someFx,\n  stubArray,\n  stubObject,\n  stubString,\n  tail,\n  toCamelCase,\n  toFinite,\n  toIngeter,\n  toKebabCase,\n  toLowerCase,\n  toNumber,\n  toPath,\n  toSnakeCase,\n  toString,\n  toStringTag,\n  toTitleCase,\n  toUpperCase,\n  toUpperFirst,\n  toWords,\n  trinary,\n  True,\n  unary,\n  values,\n  zip,\n  zipFx,\n};\n"]}