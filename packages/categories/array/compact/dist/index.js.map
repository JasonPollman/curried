{"version":3,"sources":["index.js"],"names":["compact","array","arr","len","length","i","index"],"mappings":"4FAsBe,QAASA,CAAAA,OAAT,CAAiBC,CAAjB,CAAwB,IAC/BC,CAAAA,CAAG,CAAG,EADyB,CAE/BC,CAAG,CAAY,IAAT,EAAAF,CAAK,CAAW,CAAX,CAAeA,CAAK,CAACG,MAFD,CAIjCC,CAAC,CAAG,CAJ6B,CAKjCC,CAAK,CAAG,CAAC,CALwB,CAOrC,MAAO,EAAEA,CAAF,CAAUH,CAAjB,CAAsB,CACpB,GAAIF,CAAK,CAACK,CAAD,CAAT,CAAkB,CAChBJ,CAAG,CAACG,CAAC,EAAF,CAAH,CAAWJ,CAAK,CAACK,CAAD,CACjB,CACF,CAED,MAAOJ,CAAAA,CACR","sourceRoot":"packages/categories/array/compact","sourcesContent":["/**\n * Compacts an array by removing falsy values.\n *\n * A *falsy* value is one for which `!value === true`.\n * So, `0`, `''`, `false`, `NaN`, `null`, or `undefined`.\n *\n * @name compact\n * @param {Array} array The array to remove falsy values from.\n * @returns {Array} A newly compacted array.\n *\n * @arity 1\n * @category array\n * @publishdoc\n * @since v0.0.0\n * @export\n * @example\n *\n * import { compact } from '@foldr/all';\n *\n * compact([1, null, 3, undefined]); // => [1, 3]\n * compact(['', 0, 4]);              // => [4]\n */\nexport default function compact(array) {\n  const arr = [];\n  const len = array == null ? 0 : array.length;\n\n  let i = 0;\n  let index = -1;\n\n  while (++index < len) {\n    if (array[index]) {\n      arr[i++] = array[index];\n    }\n  }\n\n  return arr;\n}\n"]}