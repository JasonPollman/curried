{"version":3,"sources":["index.js"],"names":["tail","array","results","size","length"],"mappings":"yFAoBe,QAASA,CAAAA,IAAT,CAAcC,CAAd,CAAqB,CAClC,GAAMC,CAAAA,CAAO,CAAG,EAAhB,CACA,GAAI,CAACD,CAAL,CAAY,MAAOC,CAAAA,CAAP,CAEZ,GAAIC,CAAAA,CAAI,CAAGF,CAAK,CAACG,MAAjB,CACA,GAAW,CAAP,CAAAD,CAAJ,CAAc,MAAOD,CAAAA,CAAP,CAEd,MAAO,EAAEC,CAAT,EAAeD,CAAO,CAACC,CAAI,CAAG,CAAR,CAAP,CAAoBF,CAAK,CAACE,CAAD,CAAxC,CACA,MAAOD,CAAAA,CACR","sourceRoot":"packages/categories/array/tail","sourcesContent":["\n/**\n * Returns a new array containing all elements of the provided array except the first.\n *\n * @name tail\n * @param {Array} array The array to get the tail of.\n * @returns {Array} A new array containing the elements (0..N] from the original array.\n *\n * @category array\n * @publishdoc\n * @since v0.0.0\n * @export\n * @example\n *\n * import { tail } from '@foldr/tail';\n *\n * tail([1, 2, 3, 4]); // => [2, 3, 4]\n * tail([1]);          // => []\n * tail([]);           // => []\n */\nexport default function tail(array) {\n  const results = [];\n  if (!array) return results;\n\n  let size = array.length;\n  if (size < 2) return results;\n\n  while (--size) results[size - 1] = array[size];\n  return results;\n}\n"]}