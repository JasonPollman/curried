{"version":3,"sources":["index.js"],"names":["EmptyArray","$$empty","$$reverse","$$results","$$handler","context","results","iteratee","i","value","key","collection","capped"],"mappings":"2FAAA,kF,2EAEMA,CAAAA,UAAU,CAAG,iBAAM,EAAN,C,UA+BJ,8BAAS,CACtBC,OAAO,CAAED,UADa,CAEtBE,SAAS,GAFa,CAGtBC,SAAS,CAAEH,UAHW,CAItBI,SAAS,CAAE,WAACC,CAAD,CAAUC,CAAV,CAAmBC,CAAnB,CAA6BC,CAA7B,CAAgCC,CAAhC,CAAuCC,CAAvC,CAA4CC,CAA5C,CAA2D,CAEpEL,CAAO,CAACE,CAAD,CAAP,CAAaH,CAAO,EAAIA,CAAO,CAACO,MAAnB,CAA4BL,CAAQ,CAACE,CAAD,CAApC,CAA8CF,CAAQ,CAACE,CAAD,CAAQC,CAAR,CAAaC,CAAb,CACpE,CAPqB,CAAT,C","sourceRoot":"packages/categories/collection/map-right","sourcesContent":["import iterator from '@foldr/internal-iterator';\n\nconst EmptyArray = () => [];\n\n/**\n * This function is like `map` except that iteration is performed from right to left.\n *\n * Iteratee functions are called with the signature `iteratee(value, key, collection)`, where\n * `value` is the current item in the collection, `key` is the key of the current item in the\n * collection, and `collection` is collection.\n *\n * @name mapRight\n * @param {Array|Object|String|Arguments} collection The collection to iterate over.\n * @param {function} iteratee The iterate function to use while mapping.\n * @returns {Array} The results of mapping `collection` to `iteratee`.\n *\n * @arity 2\n * @category collection\n * @publishdoc\n * @since v0.0.0\n * @export\n * @example\n *\n * import { mapRight } from '@foldr/all';\n *\n * function square(x) {\n *   return x ** 2;\n * }\n *\n * mapRight([1, 2, 3], square);            // => [9, 4, 1]\n * mapRight({ a: 1, b: 2, c: 3 }, square); // => [9, 4, 1]\n * mapRight('foobar', identity);           // => ['r', 'a', 'b', 'o', 'o', 'f']\n */\nexport default iterator({\n  $$empty: EmptyArray,\n  $$reverse: true,\n  $$results: EmptyArray,\n  $$handler: (context, results, iteratee, i, value, key, collection) => {\n    // eslint-disable-next-line no-param-reassign\n    results[i] = context && context.capped ? iteratee(value) : iteratee(value, key, collection);\n  },\n});\n"]}