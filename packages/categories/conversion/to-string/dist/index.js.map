{"version":3,"sources":["index.js"],"names":["toString","x"],"mappings":"6FA4Be,QAASA,CAAAA,QAAT,CAAkBC,CAAlB,CAAqB,CAClC,GAAiB,QAAb,QAAOA,CAAAA,CAAX,CAA2B,MAAOA,CAAAA,CAAP,CAC3B,MAAY,KAAL,EAAAA,CAAC,EAAkC,UAAtB,QAAOA,CAAAA,CAAC,CAACD,QAAtB,CAAgDC,CAAC,CAACD,QAAF,EAAhD,CAA+D,EACvE","sourceRoot":"packages/categories/conversion/to-string","sourcesContent":["/**\n * Converts a value into a string by calling it's inherited or own `toString` method.\n * An empty string is returned for `null` and `undefined`.\n *\n * @name toString\n * @param {any} x The value to convert to a string.\n * @returns {string} The value to convert to a string.\n *\n * @arity 1\n * @category conversion\n * @publishdoc\n * @since v0.0.0\n * @export\n * @example\n *\n * import { toString } from '@foldr/all';\n *\n * toString(null);      // => ''\n * toString(undefined); // => ''\n * toString(0);         // => '0'\n * toString('foo');     // => 'foo'\n * toString([1, 2, 3]); // => '1,2,3'\n *\n * toString({\n *   value: 'string-value',\n *   toString() { return this.value; },\n * }) // => 'value'\n */\nexport default function toString(x) {\n  if (typeof x === 'string') return x;\n  return x != null && typeof x.toString === 'function' ? x.toString() : '';\n}\n"]}