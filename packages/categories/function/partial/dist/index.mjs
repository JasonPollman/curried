import SafeSymbolFor from"@foldr/internal-symbol";export var _=SafeSymbolFor("placeholder");export var IS_PARTIAL=SafeSymbolFor("is-partial-fn");export var ARITY=SafeSymbolFor("source-arity");export var SOURCE=SafeSymbolFor("source-fn");function toStringForPartialed(){return"/* Partial Wrapped */\r\n".concat(this[SOURCE].toString())}function partialize(a,b){var c=b.length;return function(){var d=arguments,e=[],f=d.length,g=0,h=0;while(g<c){e[g]=b[g]===_?d[h++]:b[g];g++}while(h<f){e[g++]=d[h++]}return a.apply(this,e)}}export default function partial(a){if("function"!=typeof a){throw new TypeError("The first argument given to `partial` must be a function.")}for(var b=arguments.length,c=Array(1<b?b-1:0),d=1;d<b;d++){c[d-1]=arguments[d]}if(!c.length)return a;var e=partialize(a,c),f=c.length,g=0<=a[ARITY]?a[ARITY]:a.length;while(0<=--f){if(c[f]!==_)g--}e[ARITY]=g;e[SOURCE]=a;e[IS_PARTIAL]=!0;e.toString=toStringForPartialed;return e}partial._=_;
//# sourceMappingURL=index.js.map
