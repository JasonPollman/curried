{"version":3,"sources":["index.js"],"names":["nary","partial","_"],"mappings":"oSAyBe,qBAAQA,aAAR,CAAcC,iBAAQC,CAAtB,CAAyB,CAAzB,C","sourceRoot":"packages/categories/function/unary","sourcesContent":["import nary from '@foldr/nary';\nimport partial from '@foldr/partial';\n\n/**\n * Creates a function that wraps `fn` and invokes it with up to 1 argument.\n * Extraneous arguments passed to the wrapped function will be ignored.\n *\n * @param {function} fn The function to fix the arity of.\n * @returns {function} The function with a fixed arity of 1.\n *\n * @arity 1\n * @category function\n * @publishdoc\n * @since v0.0.0\n * @export\n * @example\n *\n * import { unary } from '@foldr/all';\n *\n * const fixed = unary(function () {\n *   return arguments;\n * });\n *\n * fixed('a', 'b', 'c', 'd'); // => { 0: 'a' }\n */\nexport default partial(nary, partial._, 1);\n"]}