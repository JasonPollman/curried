{"version":3,"sources":["index.js"],"names":["toCamelCase","string","words","count","length","i","result","toLowerCase"],"mappings":"+SAuBe,QAASA,CAAAA,WAAT,CAAqBC,CAArB,CAA6B,IACpCC,CAAAA,CAAK,CAAG,qBAAQD,CAAR,CAD4B,CAEpCE,CAAK,CAAGD,CAAK,CAACE,MAFsB,CAI1C,GAAI,CAACD,CAAL,CAAY,MAAO,EAAP,CAJ8B,GAMtCE,CAAAA,CAAC,CAAG,CANkC,CAOtCC,CAAM,CAAGJ,CAAK,CAAC,CAAD,CAAL,CAASK,WAAT,EAP6B,CAS1C,MAAOF,CAAC,CAAGF,CAAX,CAAkB,CAChBG,CAAM,EAAI,0BAAaJ,CAAK,CAACG,CAAC,EAAF,CAAlB,CACX,CAED,MAAOC,CAAAA,CACR","sourceRoot":"packages/categories/string/to-camel-case","sourcesContent":["import toWords from '@foldr/to-words';\nimport toUpperFirst from '@foldr/to-upper-first';\n\n/**\n * Converts a string to camel case.\n *\n * @name toCamelCase\n * @param {string} string The string to convert to camel case.\n * @returns {Array<string>} The camel cased string.\n *\n * @arity 1\n * @category string\n * @publishdoc\n * @since v0.0.0\n * @export\n * @example\n *\n * import { toCamelCase } from '@foldr/all';\n *\n * toCamelCase('foo bar');  // => 'fooBar'\n * toCamelCase('foo-bar');  // => 'fooBar'\n * toCamelCase('foo_bar');  // => 'fooBar'\n */\nexport default function toCamelCase(string) {\n  const words = toWords(string);\n  const count = words.length;\n\n  if (!count) return '';\n\n  let i = 1;\n  let result = words[0].toLowerCase();\n\n  while (i < count) {\n    result += toUpperFirst(words[i++]);\n  }\n\n  return result;\n}\n"]}