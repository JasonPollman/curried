{"version":3,"sources":["index.js"],"names":["isEqual","x","y"],"mappings":"4FAsCe,QAASA,CAAAA,OAAT,CAAiBC,CAAjB,CAAoBC,CAApB,CAAuB,CACpC,MAAOD,CAAAA,CAAC,GAAKA,CAAN,CAAUA,CAAC,GAAKC,CAAhB,CAAoBA,CAAC,GAAKA,CAClC","sourceRoot":"packages/categories/types/is-equal","sourcesContent":["/**\n * Exports the `isEqual` function.\n * @since 11/17/18\n * @file\n */\n\n/* eslint-disable no-self-compare */\n\n/**\n * Determines is `x` is equal to `y` according to the SameValueZero comparison.\n * This is basically the equivalent of `===`, except that it accounts for\n * `NaN === NaN`, which returns `false` when using `===` and true according to the\n * SameValueZero comparison.\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness\n *\n * @name isEqual\n * @param {any} x The first value to compare.\n * @param {any} y The seconds value to compare.\n * @returns {boolean} True if `x` is equal to `y`.\n *\n * @category utility\n * @publishdoc\n * @since v0.0.0\n * @export\n * @example\n *\n * isEqual(1, 1);         // => true\n * isEqual(1, '1');       // => false\n *\n * isEqual('foo', 'foo'); // => true\n * isEqual(NaN, NaN);     // => true\n * isEqual(0, NaN);       // => false\n *\n * isEqual({}, {});       // => false\n *\n * const obj = {};\n * isEqual(obj, obj);     // => true\n */\nexport default function isEqual(x, y) {\n  return x === x ? x === y : y !== y;\n}\n"]}