{"version":3,"sources":["index.js"],"names":["isNaNPolyfill","x","Number","isNaN"],"mappings":"+HAaO,QAASA,CAAAA,aAAT,CAAuBC,CAAvB,CAA0B,CAE/B,MAAOA,CAAAA,CAAC,GAAKA,CACd,C,aAkBcC,MAAM,CAACC,KAAP,EAA2CH,a","sourceRoot":"packages/categories/types/is-nan","sourcesContent":["/**\n * Exports the `isNaN` function.\n * @since 9/25/18\n * @file\n */\n\n/**\n * This is based of the `Number.isNaN` polyfill from\n * [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN#Polyfill).\n * @param {any} x The value to check.\n * @returns {boolean} True if `x` is NaN, false otherwise.\n * @export\n */\nexport function isNaNPolyfill(x) {\n  // eslint-disable-next-line no-self-compare\n  return x !== x;\n}\n\n/**\n * Determines if the given item is NaN.\n *\n * @name isNaN\n * @param {any} x The value to check.\n * @returns {boolean} True if `x` is NaN, false otherwise.\n *\n * @category types\n * @publishdoc\n * @since v0.0.0\n * @export\n * @example\n *\n * isNaN(NaN);    // => true\n * isNaN('foo');  // => false\n */\nexport default Number.isNaN || /* istanbul ignore next */ isNaNPolyfill;\n"]}