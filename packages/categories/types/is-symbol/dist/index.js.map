{"version":3,"sources":["index.js"],"names":["isSymbolCrossFrame","Symbol","isSymbol","x"],"mappings":"6FAMA,qD,wEAEA,GAAMA,CAAAA,kBAAkB,CAAqB,UAAlB,QAAOC,CAAAA,MAAP,CAA+B,gBAAGA,MAAH,CAA/B,CAAuE,oBAAlG,CAoBe,QAASC,CAAAA,QAAT,CAAkBC,CAAlB,CAAqB,CAClC,MAAoB,QAAb,QAAOA,CAAAA,CAAP,EAAyBH,kBAAkB,CAACG,CAAD,CACnD","sourceRoot":"packages/categories/types/is-symbol","sourcesContent":["/**\n * Exports the `isSymbol` function.\n * @since 10/28/18\n * @file\n */\n\nimport is from '@foldr/is';\n\nconst isSymbolCrossFrame = typeof Symbol === 'function' ? is(Symbol) : /* istanbul ignore next */ () => false;\n\n/**\n * Determines if the given item is an instance of Symbol.\n *\n * @name isSymbol\n * @param {any} x The value to check.\n * @returns {boolean} True if `x` is a Symbol object, false otherwise.\n *\n * @category types\n * @publishdoc\n * @since v0.0.0\n * @export\n * @example\n *\n * isSymbol(Symbol('foo'));     // => true\n * isSymbol(Symbol.for('foo')); // => true\n * isSymbol('');                // => false\n * isSymbol(100);               // => false\n */\nexport default function isSymbol(x) {\n  return typeof x === 'symbol' || isSymbolCrossFrame(x);\n}\n"]}