{"version":3,"sources":["index.js"],"names":["ESCAPE_RE","escapeRegExp","string","test","replace"],"mappings":"iGAAA,kE,wEAIA,GAAMA,CAAAA,SAAS,CAAG,qBAAlB,CAqBe,QAASC,CAAAA,YAAT,CAAsBC,CAAtB,CAA8B,CAC3CA,CAAM,CAAG,sBAASA,CAAT,CAAT,CACA,MAAOA,CAAAA,CAAM,EAAIF,SAAS,CAACG,IAAV,CAAeD,CAAf,CAAV,CAAmCA,CAAM,CAACE,OAAP,CAAeJ,SAAf,CAA0B,MAA1B,CAAnC,CAAuEE,CAC/E","sourceRoot":"packages/categories/utility/escape-regexp","sourcesContent":["import toString from '@foldr/to-string';\n\n/* eslint-disable no-param-reassign */\n\nconst ESCAPE_RE = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/**\n * Escapes characters that have special meaning in regular expressions. That is:\n * `\\\\`, `^`, `$`, `.`, `*`, `+`, `?`, `(`, `)`, `[`, `]`, `{`, `}`, and `|`. This\n * is useful to creating new regular expressions from user input, for example.\n * @param {string} string The string to escape.\n * @returns {string} The escaped string.\n *\n * @arity 1\n * @category utility\n * @publishdoc\n * @since v0.0.0\n * @example\n *\n * import { escapeRegExp } from '@foldr/all';\n *\n * escapeRegExp('$1.00');                      // => '\\\\$1\\\\.00'\n * escapeRegExp('foobar');                     // => 'foobar'\n * escapeRegExp('Is there anybody in there?'); // => 'Is there anybody in there\\\\?'\n */\nexport default function escapeRegExp(string) {\n  string = toString(string);\n  return string && ESCAPE_RE.test(string) ? string.replace(ESCAPE_RE, '\\\\$&') : string;\n}\n"]}