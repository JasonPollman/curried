import memoize from"@foldr/memoize";import isArray from"@foldr/is-array";import toString from"@foldr/to-string";var MAX_ITEMS=100;export var cache=new memoize.Cache;function resolver(a){if(cache.size>MAX_ITEMS)cache.clear();return a[0]}function toStringPath(a){var b=[],c=a.length;if(!a||!c)return b;var d=0,e=0,f=!1,g,h=!1,j="";while(d<c){var k=a[d++];switch(k){case".":if(!f&&!h){if(j){b[e++]=j;j=""}}else{j+=k}break;case"[":if(!f&&!h){h=!0;if(j){b[e++]=j;j=""}}else{j+=k}break;case"]":if(!f&&h){h=!1;if(j){b[e++]=j;j=""}}else{j+=k}break;case"\"":case"'":if(!f){f=!0;g=k;if(!h)j+=k}else if(g===k){f=!1;if(!h)j+=k}else{j+=k}break;default:j+=k;}}if(j)b[e]=j;return b}var toStringPathMemoized=memoize(toStringPath,resolver,cache);export default function toPath(a){return isArray(a)?a:toStringPathMemoized(toString(a))}
//# sourceMappingURL=index.js.map
