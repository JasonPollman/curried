import SafeSymbolFor from"@foldr/internal-symbol";export var ARITY=SafeSymbolFor("source-arity");export var IS_REARGED=SafeSymbolFor("is-rearged-fn");export var SOURCE=SafeSymbolFor("source-fn");function toStringForRearged(){return"/* Rearg Wrapped */\r\n".concat(this[SOURCE].toString())}function reargWrap(a,b){var c=b.length;return function(){var d=arguments,e=[],f=d.length<c?d.length:c,g=0,h=0;while(g<f){e[h++]=d[b[g++]]}g=d.length;while(h<g){e[h]=d[h++]}return a.apply(this,e)}}export default function rearg(a,b){if(!b||!b.length)return a;var c=reargWrap(a,b);c[ARITY]=0<=a[ARITY]?a[ARITY]:a.length;c[SOURCE]=a;c[IS_REARGED]=!0;c.toString=toStringForRearged;return c}rearg.IS_REARGED=IS_REARGED;rearg.SOURCE=SOURCE;
//# sourceMappingURL=index.js.map
